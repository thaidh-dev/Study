use testdb
go

alter ASSEMBLY [API_Consumer]
FROM  N'C:\CLR\API_Consumer.dll'
go

drop proc APIKylinQuery;
go


Create PROCEDURE [dbo].[APIKylinQuery]
  @URL				NVARCHAR(250)
, @UserName			NVARCHAR(250)
, @Password			NVARCHAR(250)
, @Sql				NVARCHAR(Max)
, @Offset			INT	 
, @Limit			INT			 
, @acceptPartial	BIT			 
, @Project			NVARCHAR(4000)
AS EXTERNAL NAME [API_Consumer].[StoredProcedures].[APIKylinQueryMain]
GO

DECLARE @Results AS TABLE
(
	Context varchar(max)
)
INSERT INTO @Results
EXEC APIKylinQuery
	'http://192.168.101.27:7070/kylin/api/query', 
	'ADMIN', 
	'KYLIN',
	'SELECT DATETIME_ID, TTML, NOC, PROVINCE, DISTRICT, SITENAME, CELL_NODE_ID, SUM(WEB_TOTAL) WEB_TOTAL, SUM(MDO_VIDEO_COUNT) MDO_VIDEO_COUNT, SUM(WEB_RESP_SUCC) WEB_RESP_SUCC, SUM(WEB_AVG_RESP_DELAY) WEB_AVG_RESP_DELAY, SUM(WEB_AVG_DISPLAY_DELAY) WEB_AVG_DISPLAY_DELAY, SUM(WEB_DL_TIME) WEB_DL_TIME, SUM(WEB_DL_DATA) WEB_DL_DATA, SUM(WEB_BROWS_SUCC) WEB_BROWS_SUCC, SUM(WEB_BROWS_TOTAL) WEB_BROWS_TOTAL, SUM(VIDEO_STREAM_SUCC) VIDEO_STREAM_SUCC, SUM(VIDEO_STREAM_TOTAL) VIDEO_STREAM_TOTAL, SUM(VIDEO_STREAM_START_DELAY) VIDEO_STREAM_START_DELAY, SUM(VIDEO_STREAM_STALL) VIDEO_STREAM_STALL, SUM(VIDEO_STREAM_DATA) VIDEO_STREAM_DATA, SUM(VIDEO_STREAM_TIME) VIDEO_STREAM_TIME, SUM(VIDEO_HD_NUM) VIDEO_HD_NUM, SUM(VIDEO_SD_NUM) VIDEO_SD_NUM, SUM(VIDEO_LD_NUM) VIDEO_LD_NUM, SUM(HTTPS_WEB_DL_DATA) HTTPS_WEB_DL_DATA, SUM(HTTPS_WEB_DL_TIME) HTTPS_WEB_DL_TIME, SUM(HTTPS_VIDEO_STREAM_DATA) HTTPS_VIDEO_STREAM_DATA, SUM(HTTPS_VIDEO_STREAM_TIME) HTTPS_VIDEO_STREAM_TIME, SUM(HTTPS_VIDEO_HD_NUM) HTTPS_VIDEO_HD_NUM, SUM(HTTPS_VIDEO_SD_NUM) HTTPS_VIDEO_SD_NUM, SUM(HTTPS_VIDEO_LD_NUM) HTTPS_VIDEO_LD_NUM, SUM(HTTPS_VIDEO_STREAM_SUCC) HTTPS_VIDEO_STREAM_SUCC, SUM(QUIC_WEB_DL_DATA) QUIC_WEB_DL_DATA, SUM(QUIC_WEB_DL_TIME) QUIC_WEB_DL_TIME, SUM(QUIC_VIDEO_STREAM_DATA) QUIC_VIDEO_STREAM_DATA, SUM(QUIC_VIDEO_STREAM_TIME) QUIC_VIDEO_STREAM_TIME, SUM(QUIC_VIDEO_HD_NUM) QUIC_VIDEO_HD_NUM, SUM(QUIC_VIDEO_SD_NUM) QUIC_VIDEO_SD_NUM, SUM(QUIC_VIDEO_LD_NUM) QUIC_VIDEO_LD_NUM, SUM(QUIC_VIDEO_STREAM_SUCC) QUIC_VIDEO_STREAM_SUCC, CASE WHEN SUM(WEB_TOTAL) > 0 THEN 100 * SUM(WEB_RESP_SUCC) / SUM(WEB_TOTAL) ELSE 0 END AS W_RES_SR, CASE WHEN SUM(WEB_TOTAL) > 0 THEN 100 * SUM(WEB_AVG_RESP_DELAY) / SUM(WEB_TOTAL) ELSE 0 END AS W_RES_DL, CASE WHEN SUM(WEB_BROWS_TOTAL) > 0 THEN 100 * SUM(WEB_BROWS_SUCC) / SUM(WEB_BROWS_TOTAL) ELSE 0 END AS W_BRO_SR, CASE WHEN SUM(WEB_TOTAL) > 0 THEN SUM(WEB_AVG_DISPLAY_DELAY) / SUM(WEB_TOTAL) ELSE 0 END AS W_DPL_DL, CASE WHEN ( SUM(WEB_DL_TIME) + SUM(HTTPS_WEB_DL_TIME) + SUM(QUIC_WEB_DL_TIME) ) > 0 THEN ( SUM(WEB_DL_DATA) + SUM(HTTPS_WEB_DL_DATA) + SUM(QUIC_WEB_DL_DATA) ) /( SUM(WEB_DL_TIME) + SUM(HTTPS_WEB_DL_TIME) + SUM(QUIC_WEB_DL_TIME) ) ELSE 0 END AS W_DL_THP, CASE WHEN SUM(MDO_VIDEO_COUNT) > 0 THEN 100 * SUM(VIDEO_STREAM_SUCC) / SUM(MDO_VIDEO_COUNT) ELSE 0 END AS V_STR_SR, CASE WHEN SUM(MDO_VIDEO_COUNT) > 0 THEN SUM(VIDEO_STREAM_START_DELAY) / SUM(MDO_VIDEO_COUNT) ELSE 0 END AS V_STR_DL, CASE WHEN SUM(VIDEO_STREAM_SUCC) > 0 THEN 100 * SUM(VIDEO_STREAM_STALL) / SUM(VIDEO_STREAM_SUCC) ELSE 0 END AS V_STA_RT, 1 AS V_STA_FR, CASE WHEN ( SUM(VIDEO_STREAM_TIME) + SUM(HTTPS_VIDEO_STREAM_TIME) + SUM(QUIC_VIDEO_STREAM_TIME) ) > 0 THEN ( SUM(VIDEO_STREAM_DATA) + SUM(HTTPS_VIDEO_STREAM_DATA) + SUM(QUIC_VIDEO_STREAM_DATA) ) /( SUM(VIDEO_STREAM_TIME) + SUM(HTTPS_VIDEO_STREAM_TIME) + SUM(QUIC_VIDEO_STREAM_TIME) ) ELSE 0 END AS V_DL_THP, CASE WHEN ( SUM(VIDEO_STREAM_SUCC) + SUM(HTTPS_VIDEO_STREAM_SUCC) + SUM(QUIC_VIDEO_STREAM_SUCC) ) > 0 THEN ( SUM(VIDEO_HD_NUM) + SUM(HTTPS_VIDEO_HD_NUM) + SUM(QUIC_VIDEO_HD_NUM) ) /( SUM(VIDEO_STREAM_SUCC) + SUM(HTTPS_VIDEO_STREAM_SUCC) + SUM(QUIC_VIDEO_STREAM_SUCC) ) ELSE 0 END AS V_HD_RT, CASE WHEN ( SUM(VIDEO_STREAM_SUCC) + SUM(HTTPS_VIDEO_STREAM_SUCC) + SUM(QUIC_VIDEO_STREAM_SUCC) ) > 0 THEN ( SUM(VIDEO_SD_NUM) + SUM(HTTPS_VIDEO_SD_NUM) + SUM(QUIC_VIDEO_SD_NUM) ) /( SUM(VIDEO_STREAM_SUCC) + SUM(HTTPS_VIDEO_STREAM_SUCC) + SUM(QUIC_VIDEO_STREAM_SUCC) ) ELSE 0 END AS V_SD_RT, CASE WHEN ( SUM(VIDEO_STREAM_SUCC) + SUM(HTTPS_VIDEO_STREAM_SUCC) + SUM(QUIC_VIDEO_STREAM_SUCC) ) > 0 THEN ( SUM(VIDEO_LD_NUM) + SUM(HTTPS_VIDEO_LD_NUM) + SUM(QUIC_VIDEO_LD_NUM) ) /( SUM(VIDEO_STREAM_SUCC) + SUM(HTTPS_VIDEO_STREAM_SUCC) + SUM(QUIC_VIDEO_STREAM_SUCC) ) ELSE 0 END AS V_LD_RT FROM ( SELECT DATE_TIME.DATETIME_ID, CELL.TTML, CELL.NOC, CELL.PROVINCE, CELL.DISTRICT, CELL.SITENAME, CELL.CELL_NODE_ID, SUM(WEB_TOTAL) WEB_TOTAL, SUM(MDO_VIDEO_COUNT) MDO_VIDEO_COUNT, SUM(WEB_RESP_SUCC) WEB_RESP_SUCC, SUM(WEB_AVG_RESP_DELAY) WEB_AVG_RESP_DELAY, SUM(WEB_AVG_DISPLAY_DELAY) WEB_AVG_DISPLAY_DELAY, SUM(WEB_DL_TIME) WEB_DL_TIME, SUM(WEB_DL_DATA) WEB_DL_DATA, SUM(WEB_BROWS_SUCC) WEB_BROWS_SUCC, SUM(WEB_BROWS_TOTAL) WEB_BROWS_TOTAL, SUM(VIDEO_STREAM_SUCC) VIDEO_STREAM_SUCC, SUM(VIDEO_STREAM_TOTAL) VIDEO_STREAM_TOTAL, SUM(VIDEO_STREAM_START_DELAY) VIDEO_STREAM_START_DELAY, SUM(VIDEO_STREAM_STALL) VIDEO_STREAM_STALL, SUM(VIDEO_STREAM_DATA) VIDEO_STREAM_DATA, SUM(VIDEO_STREAM_TIME) VIDEO_STREAM_TIME, SUM(VIDEO_HD_NUM) VIDEO_HD_NUM, SUM(VIDEO_SD_NUM) VIDEO_SD_NUM, SUM(VIDEO_LD_NUM) VIDEO_LD_NUM, CAST(0 AS BIGINT) AS HTTPS_WEB_DL_DATA, CAST(0 AS BIGINT) AS HTTPS_WEB_DL_TIME, CAST(0 AS BIGINT) AS HTTPS_VIDEO_STREAM_DATA, CAST(0 AS BIGINT) AS HTTPS_VIDEO_STREAM_TIME, CAST(0 AS BIGINT) AS HTTPS_VIDEO_HD_NUM, CAST(0 AS BIGINT) AS HTTPS_VIDEO_SD_NUM, CAST(0 AS BIGINT) AS HTTPS_VIDEO_LD_NUM, CAST(0 AS BIGINT) AS HTTPS_VIDEO_STREAM_SUCC, CAST(0 AS DOUBLE) AS QUIC_WEB_DL_DATA, CAST(0 AS DOUBLE) AS QUIC_WEB_DL_TIME, CAST(0 AS DOUBLE) AS QUIC_VIDEO_STREAM_DATA, CAST(0 AS DOUBLE) AS QUIC_VIDEO_STREAM_TIME, CAST(0 AS DOUBLE) AS QUIC_VIDEO_HD_NUM, CAST(0 AS DOUBLE) AS QUIC_VIDEO_SD_NUM, CAST(0 AS DOUBLE) AS QUIC_VIDEO_LD_NUM, CAST(0 AS DOUBLE) AS QUIC_VIDEO_STREAM_SUCC FROM FACT_HTTP_MDO_TRANS_LOG_END_HOUR FACT INNER JOIN DIM_CELL_INFO_CELLS_CURRENT CELL ON FACT.CELL_NODE_ID = CELL.CELL_NODE_ID INNER JOIN DIM_DATE_TIME DATE_TIME ON FACT.DATETIME_ID = DATE_TIME.DATETIME_ID GROUP BY DATE_TIME.DATETIME_ID, CELL.TTML, CELL.NOC, CELL.PROVINCE, CELL.DISTRICT, CELL.SITENAME, CELL.CELL_NODE_ID UNION ALL SELECT DATE_TIME.DATETIME_ID, CELL.TTML, CELL.NOC, CELL.PROVINCE, CELL.DISTRICT, CELL.SITENAME, CELL.CELL_NODE_ID, CAST(0 AS DOUBLE) AS WEB_TOTAL, CAST(0 AS DOUBLE) AS MDO_VIDEO_COUNT, CAST(0 AS DOUBLE) AS WEB_RESP_SUCC, CAST(0 AS DOUBLE) AS WEB_AVG_RESP_DELAY, CAST(0 AS DOUBLE) AS WEB_AVG_DISPLAY_DELAY, CAST(0 AS DOUBLE) AS WEB_DL_TIME, CAST(0 AS DOUBLE) AS WEB_DL_DATA, CAST(0 AS DOUBLE) AS WEB_BROWS_SUCC, CAST(0 AS DOUBLE) AS WEB_BROWS_TOTAL, CAST(0 AS DOUBLE) AS VIDEO_STREAM_SUCC, CAST(0 AS DOUBLE) AS VIDEO_STREAM_TOTAL, CAST(0 AS DOUBLE) AS VIDEO_STREAM_START_DELAY, CAST(0 AS DOUBLE) AS VIDEO_STREAM_STALL, CAST(0 AS DOUBLE) AS VIDEO_STREAM_DATA, CAST(0 AS DOUBLE) AS VIDEO_STREAM_TIME, CAST(0 AS DOUBLE) AS VIDEO_HD_NUM, CAST(0 AS DOUBLE) AS VIDEO_SD_NUM, CAST(0 AS DOUBLE) AS VIDEO_LD_NUM, SUM(HTTPS_WEB_DL_DATA) HTTPS_WEB_DL_DATA, SUM(HTTPS_WEB_DL_TIME) HTTPS_WEB_DL_TIME, SUM(HTTPS_VIDEO_STREAM_DATA) HTTPS_VIDEO_STREAM_DATA, SUM(HTTPS_VIDEO_STREAM_TIME) HTTPS_VIDEO_STREAM_TIME, SUM(HTTPS_VIDEO_HD_NUM) HTTPS_VIDEO_HD_NUM, SUM(HTTPS_VIDEO_SD_NUM) HTTPS_VIDEO_SD_NUM, SUM(HTTPS_VIDEO_LD_NUM) HTTPS_VIDEO_LD_NUM, SUM(HTTPS_VIDEO_STREAM_SUCC) HTTPS_VIDEO_STREAM_SUCC, CAST(0 AS DOUBLE) AS QUIC_WEB_DL_DATA, CAST(0 AS DOUBLE) AS QUIC_WEB_DL_TIME, CAST(0 AS DOUBLE) AS QUIC_VIDEO_STREAM_DATA, CAST(0 AS DOUBLE) AS QUIC_VIDEO_STREAM_TIME, CAST(0 AS DOUBLE) AS QUIC_VIDEO_HD_NUM, CAST(0 AS DOUBLE) AS QUIC_VIDEO_SD_NUM, CAST(0 AS DOUBLE) AS QUIC_VIDEO_LD_NUM, CAST(0 AS DOUBLE) AS QUIC_VIDEO_STREAM_SUCC FROM FACT_HTTPS_MDO_TRANS_LOG_END_HOUR FACT INNER JOIN DIM_CELL_INFO_CELLS_CURRENT CELL ON FACT.CELL_NODE_ID = CELL.CELL_NODE_ID INNER JOIN DIM_DATE_TIME DATE_TIME ON FACT.DATETIME_ID = DATE_TIME.DATETIME_ID GROUP BY DATE_TIME.DATETIME_ID, CELL.TTML, CELL.NOC, CELL.PROVINCE, CELL.DISTRICT, CELL.SITENAME, CELL.CELL_NODE_ID UNION ALL SELECT DATE_TIME.DATETIME_ID, CELL.TTML, CELL.NOC, CELL.PROVINCE, CELL.DISTRICT, CELL.SITENAME, CELL.CELL_NODE_ID, CAST(0 AS DOUBLE) AS WEB_TOTAL, CAST(0 AS DOUBLE) AS MDO_VIDEO_COUNT, CAST(0 AS DOUBLE) AS WEB_RESP_SUCC, CAST(0 AS DOUBLE) AS WEB_AVG_RESP_DELAY, CAST(0 AS DOUBLE) AS WEB_AVG_DISPLAY_DELAY, CAST(0 AS DOUBLE) AS WEB_DL_TIME, CAST(0 AS DOUBLE) AS WEB_DL_DATA, CAST(0 AS DOUBLE) AS WEB_BROWS_SUCC, CAST(0 AS DOUBLE) AS WEB_BROWS_TOTAL, CAST(0 AS DOUBLE) AS VIDEO_STREAM_SUCC, CAST(0 AS DOUBLE) AS VIDEO_STREAM_TOTAL, CAST(0 AS DOUBLE) AS VIDEO_STREAM_START_DELAY, CAST(0 AS DOUBLE) AS VIDEO_STREAM_STALL, CAST(0 AS DOUBLE) AS VIDEO_STREAM_DATA, CAST(0 AS DOUBLE) AS VIDEO_STREAM_TIME, CAST(0 AS DOUBLE) AS VIDEO_HD_NUM, CAST(0 AS DOUBLE) AS VIDEO_SD_NUM, CAST(0 AS DOUBLE) AS VIDEO_LD_NUM, CAST(0 AS BIGINT) AS HTTPS_WEB_DL_DATA, CAST(0 AS BIGINT) AS HTTPS_WEB_DL_TIME, CAST(0 AS BIGINT) AS HTTPS_VIDEO_STREAM_DATA, CAST(0 AS BIGINT) AS HTTPS_VIDEO_STREAM_TIME, CAST(0 AS BIGINT) AS HTTPS_VIDEO_HD_NUM, CAST(0 AS BIGINT) AS HTTPS_VIDEO_SD_NUM, CAST(0 AS BIGINT) AS HTTPS_VIDEO_LD_NUM, CAST(0 AS BIGINT) AS HTTPS_VIDEO_STREAM_SUCC, SUM(QUIC_WEB_DL_DATA) QUIC_WEB_DL_DATA, SUM(QUIC_WEB_DL_TIME) QUIC_WEB_DL_TIME, SUM(QUIC_VIDEO_STREAM_DATA) QUIC_VIDEO_STREAM_DATA, SUM(QUIC_VIDEO_STREAM_TIME) QUIC_VIDEO_STREAM_TIME, SUM(QUIC_VIDEO_HD_NUM) QUIC_VIDEO_HD_NUM, SUM(QUIC_VIDEO_SD_NUM) QUIC_VIDEO_SD_NUM, SUM(QUIC_VIDEO_LD_NUM) QUIC_VIDEO_LD_NUM, SUM(QUIC_VIDEO_STREAM_SUCC) QUIC_VIDEO_STREAM_SUCC FROM FACT_QUIC_MDO_TRANS_LOG_END_HOUR FACT INNER JOIN DIM_CELL_INFO_CELLS_CURRENT CELL ON FACT.CELL_NODE_ID = CELL.CELL_NODE_ID INNER JOIN DIM_DATE_TIME DATE_TIME ON FACT.DATETIME_ID = DATE_TIME.DATETIME_ID GROUP BY DATE_TIME.DATETIME_ID, CELL.TTML, CELL.NOC, CELL.PROVINCE, CELL.DISTRICT, CELL.SITENAME, CELL.CELL_NODE_ID UNION ALL SELECT DATE_TIME.DATETIME_ID, CELL.TTML, CELL.NOC, CELL.PROVINCE, CELL.DISTRICT, CELL.SITENAME, CELL.CELL_NODE_ID, CAST(0 AS DOUBLE) AS WEB_TOTAL, CAST(0 AS DOUBLE) AS MDO_VIDEO_COUNT, CAST(0 AS DOUBLE) AS WEB_RESP_SUCC, CAST(0 AS DOUBLE) AS WEB_AVG_RESP_DELAY, CAST(0 AS DOUBLE) AS WEB_AVG_DISPLAY_DELAY, CAST(0 AS DOUBLE) AS WEB_DL_TIME, CAST(0 AS DOUBLE) AS WEB_DL_DATA, CAST(0 AS DOUBLE) AS WEB_BROWS_SUCC, CAST(0 AS DOUBLE) AS WEB_BROWS_TOTAL, CAST(0 AS DOUBLE) AS VIDEO_STREAM_SUCC, CAST(0 AS DOUBLE) AS VIDEO_STREAM_TOTAL, CAST(0 AS DOUBLE) AS VIDEO_STREAM_START_DELAY, CAST(0 AS DOUBLE) AS VIDEO_STREAM_STALL, CAST(0 AS DOUBLE) AS VIDEO_STREAM_DATA, CAST(0 AS DOUBLE) AS VIDEO_STREAM_TIME, CAST(0 AS DOUBLE) AS VIDEO_HD_NUM, CAST(0 AS DOUBLE) AS VIDEO_SD_NUM, CAST(0 AS DOUBLE) AS VIDEO_LD_NUM, CAST(0 AS BIGINT) AS HTTPS_WEB_DL_DATA, CAST(0 AS BIGINT) AS HTTPS_WEB_DL_TIME, CAST(0 AS BIGINT) AS HTTPS_VIDEO_STREAM_DATA, CAST(0 AS BIGINT) AS HTTPS_VIDEO_STREAM_TIME, CAST(0 AS BIGINT) AS HTTPS_VIDEO_HD_NUM, CAST(0 AS BIGINT) AS HTTPS_VIDEO_SD_NUM, CAST(0 AS BIGINT) AS HTTPS_VIDEO_LD_NUM, CAST(0 AS BIGINT) AS HTTPS_VIDEO_STREAM_SUCC, SUM(QUIC_WEB_DL_DATA) QUIC_WEB_DL_DATA, SUM(QUIC_WEB_DL_TIME) QUIC_WEB_DL_TIME, SUM(QUIC_VIDEO_STREAM_DATA) QUIC_VIDEO_STREAM_DATA, SUM(QUIC_VIDEO_STREAM_TIME) QUIC_VIDEO_STREAM_TIME, SUM(QUIC_VIDEO_HD_NUM) QUIC_VIDEO_HD_NUM, SUM(QUIC_VIDEO_SD_NUM) QUIC_VIDEO_SD_NUM, SUM(QUIC_VIDEO_LD_NUM) QUIC_VIDEO_LD_NUM, SUM(QUIC_VIDEO_STREAM_SUCC) QUIC_VIDEO_STREAM_SUCC FROM FACT_OTHER_QUIC_MDO_TRANS_LOG_END_HOUR FACT INNER JOIN DIM_CELL_INFO_CELLS_CURRENT CELL ON FACT.CELL_NODE_ID = CELL.CELL_NODE_ID INNER JOIN DIM_DATE_TIME DATE_TIME ON FACT.DATETIME_ID = DATE_TIME.DATETIME_ID GROUP BY DATE_TIME.DATETIME_ID, CELL.TTML, CELL.NOC, CELL.PROVINCE, CELL.DISTRICT, CELL.SITENAME, CELL.CELL_NODE_ID ) GROUP BY TTML, NOC, PROVINCE, DISTRICT, SITENAME, CELL_NODE_ID, DATETIME_ID', 
	0,
	1,
	1,
	'NOC_MDO'

--Result: column per value.
SELECT [DATETIME_ID], [DATE_ID]		
FROM (SELECT Context from @Results) tb
OUTER APPLY OPENJSON (context)  
WITH (
	[datetime_id] varchar(50) '$.DATETIME_ID', 
	[date_ID] varchar(50) '$.DATE_ID'
);
go



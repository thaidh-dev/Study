--bai1 
--1a
if OBJECT_ID('FNBAI1_1') IS NOT NULL
DROP FUNCTION  FNBAI1_1
GO
CREATE FUNCTION FNBAI1_1()
 RETURNS INT
 BEGIN
 DECLARE @MINDATE DATETIME
 SET @MINDATE=(SELECT MIN(INVOICEDATE) 
 FROM Invoices
 WHERE InvoiceTotal-PaymentTotal-CreditTotal>0)
 RETURN(SELECT INVOICEID
 FROM Invoices
 WHERE InvoiceTotal-PaymentTotal-CreditTotal>0
 AND InvoiceDate=@MINDATE)
 END
 --bai2b
---THAY WHERE BANG DBO.FNBAI1_1
select vendorname, InvoiceNumber, InvoiceDueDate, InvoiceTotal - CreditTotal - PaymentTotal as 'Balance' from vendors
join Invoices on vendors.vendorid = invoices.VendorID
where invoiceid = dbo.FNBAI1_1()

select dbo.fnbai1_1()

--BAI2
--a
if OBJECT_ID('FNBAI1_2') IS NOT NULL
DROP FUNCTION  FNBAI1_2
GO
CREATE FUNCTION FNBAI1_2(@datemin smallDATETIME =NULL,@DATEMAX SMALLDATETIME =NULL)
RETURNS TABLE 
RETURN (SELECT INVOICENUMBER,INVOICEDATE,INVOICETOTAL,INVOICETOTAL-PAYMENTTOTAL-CREDITTOTAL AS BALANCE
FROM Invoices
WHERE InvoiceDate BETWEEN @datemin AND @DATEMAX)
--B SU DUNG HAM
SELECT*FROM FNBAI1_2 ('04/10/2008','04/20/2008')
---BAI2-2 MA KICH BAN

if OBJECT_ID('BAI2_W') IS NOT NULL
DROP VIEW BAI2_W
GO
CREATE VIEW  BAI2_W
AS
SELECT VENDORID,MIN(INVOICEDATE) AS NGAYNN
FROM Invoices
GROUP BY VendorID
--TRUY VAN
SELECT VENDORNAME,NGAYNN,INVOICETOTAL
FROM Vendors 
 JOIN INVOICES ON Vendors.VENDORID=Invoices.VendorID
 JOIN BAI2_W ON Invoices.VendorID=BAI2_W.VendorID
 ORDER BY VendorName,NGAYNN

 select * from bai2_w


